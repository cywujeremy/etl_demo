# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/00_acs_pull.ipynb (unless otherwise specified).

__all__ = ['ACS_Blockgroup_Data_Pull', 'ACS_Blockgroup_Data_Pull']

# Cell
import os

os.chdir('../')

# Cell
from dataclasses import dataclass
from nbdev.showdoc import *
from us import states
import numpy as np
import pandas as pd
import requests
import json
import census


# Cell
@dataclass
class ACS_Blockgroup_Data_Pull:

    raw_data: pd.DataFrame = None
    cleaned_data: pd.DataFrame = None
    var_dict: dict = None
    key: str = 'c4753d52a740be73d2c0b6d950b75e5dd0f1c8f1'

    def __post_init__(self, year=2019, state='PA', variables=('NAME', 'B01003_001E', 'B01002_001E', 'B19301_001E', 'B25071_001E', 'B25010_001E')):

        '''Get raw data from Census API and execute basic data cleaning.
        '''
        # --------- Get Raw Data --------------

        c = census.Census(key=self.key, year=year)
        state_fips = getattr(states, state).fips

        var_tuple = variables
        geo = {'for': 'block group:{}'.format('*'),
               'in' : 'state:{} county:{} tract:{}'.format(state_fips, '*', '*')}

        response = c.acs5.get(var_tuple, geo)
        self.raw_data = pd.DataFrame(response)

        # --------- Basic Data Cleaning -------------

        # definitions_url = "https://api.census.gov/data/2019/acs/acs5/variables.json"
        # self.var_dict = json.loads(requests.get(definitions_url).content)['variables']

        var_dict = {'B01003_001E': 'total_population',
                    'B01002_001E': 'median_age',
                    'B19301_001E': 'per_capita_income',
                    'B25071_001E': 'median_rent_to_household_income',
                    'B25010_001E': 'avg_household_size'}

        self.cleaned_data = self.raw_data.copy()

        self.cleaned_data.rename(columns=var_dict, inplace=True)
        self.cleaned_data.rename(columns={'state': 'state_id', 'county': 'county_id'}, inplace=True)

        self.cleaned_data['state'] = state
        self.cleaned_data['county'] = [x.split(',')[2].strip() for x in self.raw_data['NAME']]

        self.cleaned_data = self.cleaned_data[['state_id', 'state', 'county_id', 'county', 'block group', 'tract',
                                               'total_population', 'median_age', 'per_capita_income', 'median_rent_to_household_income',
                                               'avg_household_size', 'NAME']]


# Cell
import os

os.chdir('../')

# Cell
from dataclasses import dataclass
from nbdev.showdoc import *
from us import states
import numpy as np
import pandas as pd
import requests
import json
import census


# Cell
@dataclass
class ACS_Blockgroup_Data_Pull:

    raw_data: pd.DataFrame = None
    cleaned_data: pd.DataFrame = None
    var_dict: dict = None
    key: str = 'c4753d52a740be73d2c0b6d950b75e5dd0f1c8f1'

    def __post_init__(self, year=2019, state='PA', variables=('NAME', 'B01003_001E', 'B01002_001E', 'B19301_001E', 'B25071_001E', 'B25010_001E')):

        '''Get raw data from Census API and execute basic data cleaning.
        '''
        # --------- Get Raw Data --------------

        c = census.Census(key=self.key, year=year)
        state_fips = getattr(states, state).fips

        var_tuple = variables
        geo = {'for': 'block group:{}'.format('*'),
               'in' : 'state:{} county:{} tract:{}'.format(state_fips, '*', '*')}

        response = c.acs5.get(var_tuple, geo)
        self.raw_data = pd.DataFrame(response)

        # --------- Basic Data Cleaning -------------

        # definitions_url = "https://api.census.gov/data/2019/acs/acs5/variables.json"
        # self.var_dict = json.loads(requests.get(definitions_url).content)['variables']

        var_dict = {'B01003_001E': 'total_population',
                    'B01002_001E': 'median_age',
                    'B19301_001E': 'per_capita_income',
                    'B25071_001E': 'median_rent_to_household_income',
                    'B25010_001E': 'avg_household_size'}

        self.cleaned_data = self.raw_data.copy()

        self.cleaned_data.rename(columns=var_dict, inplace=True)
        self.cleaned_data.rename(columns={'state': 'state_id', 'county': 'county_id'}, inplace=True)

        self.cleaned_data['state'] = state
        self.cleaned_data['county'] = [x.split(',')[2].strip() for x in self.raw_data['NAME']]

        self.cleaned_data = self.cleaned_data[['state_id', 'state', 'county_id', 'county', 'block group', 'tract',
                                               'total_population', 'median_age', 'per_capita_income', 'median_rent_to_household_income',
                                               'avg_household_size', 'NAME']]
